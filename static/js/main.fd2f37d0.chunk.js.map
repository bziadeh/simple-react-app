{"version":3,"sources":["components/CustomerPanel.jsx","components/CustomerDetails.jsx","components/Customers.jsx","components/App.jsx","index.js"],"names":["CustomerPanel","state","customerInfo","id","props","name","email","phone","this","handleToUpdate","className","style","marginTop","tag","sub","type","onClick","Component","CustomerDetails","getCustomerDetails","customerId","axios","get","then","response","setState","details","prevProps","value","charAt","toUpperCase","slice","data","keys","Object","entries","map","key","capitalize","element","Customers","selectedCustomer","loadCustomers","customerList","md","customer","App","basename","process","exact","path","render","to","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fd2f37d0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBContainer,\r\n} from \"mdbreact\";\r\n\r\nclass CustomerPanel extends Component {\r\n  state = {\r\n    customerInfo: {\r\n      id: this.props.id,\r\n      name: this.props.name,\r\n      email: this.props.email,\r\n      phone: this.props.phone,\r\n    },\r\n  };\r\n  render() {\r\n    const { customerInfo } = this.state;\r\n    const handleToUpdate = this.props.handleToUpdate;\r\n\r\n    return (\r\n      <MDBContainer className=\"no-gutters animated zoomIn\">\r\n        <MDBCard style={{ marginTop: \"1rem\" }}>\r\n          <MDBCardBody>\r\n            <MDBCardTitle>{customerInfo.name}</MDBCardTitle>\r\n            <MDBCardTitle tag=\"h6\" sub className=\"mb-2 text-muted\">\r\n              {customerInfo.email}\r\n            </MDBCardTitle>\r\n            <MDBCardText>{customerInfo.phone}</MDBCardText>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleToUpdate(customerInfo.id)}\r\n              className=\"btn btn-outline-primary btn-md\"\r\n            >\r\n              Click to view details\r\n            </button>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerPanel;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBContainer,\r\n  MDBCardHeader,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\n\r\nclass CustomerDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCustomerDetails(this.props.customerId);\r\n  }\r\n\r\n  getCustomerDetails(customerId) {\r\n    axios.get(`assets/customer${customerId}.json`).then((response) => {\r\n      this.setState({ details: response });\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.customerId !== prevProps.customerId) {\r\n      this.getCustomerDetails(this.props.customerId);\r\n    }\r\n  }\r\n\r\n  capitalize(value) {\r\n    return value.charAt(0).toUpperCase() + value.slice(1);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.details) {\r\n      return \"\";\r\n    }\r\n\r\n    const { data } = this.state.details;\r\n    const keys = Object.entries(data).map(([key, value]) => [\r\n      this.capitalize(key),\r\n      value,\r\n    ]);\r\n\r\n    return (\r\n      <MDBContainer className=\"no-gutters\">\r\n        <MDBCard style={{ marginTop: \"1rem\" }}>\r\n          <MDBCardHeader>\r\n            <MDBCardTitle>{data.name}</MDBCardTitle>\r\n            <MDBCardTitle tag=\"h6\" sub className=\"mb-2 text-muted\">\r\n              {data.email}\r\n            </MDBCardTitle>\r\n          </MDBCardHeader>\r\n          <MDBCardBody>\r\n            {keys.map((element) => (\r\n              <MDBCardText key={element[0]}>\r\n                {element[0]}: {element[1]}\r\n              </MDBCardText>\r\n            ))}\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerDetails;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CustomerPanel from \"./CustomerPanel\";\r\nimport CustomerDetails from \"./CustomerDetails\";\r\nimport { MDBCol, MDBRow, MDBContainer } from \"mdbreact\";\r\n\r\nclass Customers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedCustomer: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadCustomers();\r\n  }\r\n\r\n  loadCustomers() {\r\n    axios.get(\"assets/customerlist.json\").then((response) => {\r\n      this.setState({ customerList: response });\r\n    });\r\n  }\r\n\r\n  handleToUpdate = (id) => {\r\n    this.setState({ selectedCustomer: id });\r\n  };\r\n\r\n  render() {\r\n    // Customer data has not been loaded from JSON yet.\r\n    if (!this.state.customerList) {\r\n      return \"\";\r\n    }\r\n    return (\r\n      <center>\r\n        <MDBContainer className=\"no-gutters\">\r\n          <MDBRow>\r\n            <MDBCol md=\"6\">\r\n              {this.state.customerList.data.map((customer) => (\r\n                <CustomerPanel\r\n                  key={customer.id}\r\n                  id={customer.id}\r\n                  name={customer.name}\r\n                  email={customer.email}\r\n                  phone={customer.phone}\r\n                  handleToUpdate={this.handleToUpdate}\r\n                />\r\n              ))}\r\n            </MDBCol>\r\n            <MDBCol md=\"6\">\r\n              <CustomerDetails customerId={this.state.selectedCustomer} />\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </center>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customers;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Customers from \"./Customers\";\r\n\r\nclass App extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Redirect to=\"/customers\" />} />\r\n          <Route path=\"/customers\" component={Customers}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}